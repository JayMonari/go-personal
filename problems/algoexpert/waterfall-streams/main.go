package main

const (
	water = -1
	block = 1
)

func WaterfallStreams(area [][]float64, source int) []float64 {
	rowAbove := area[0]
	rowAbove[source] = water

	for _, row := range area[1:] {
		for i := range rowAbove {
			valueAbove := rowAbove[i]

			switch {
			case valueAbove >= 0: // Is water stream
				continue
			case row[i] != block:
				row[i] += valueAbove
				continue
			}

			splitWater := valueAbove / 2
			// Move water right.
			right := i
			for right+1 < len(rowAbove) {
				right++
				if rowAbove[right] == 1.0 {
					break // if there is a block in the way
				}
				if row[right] != 1.0 { // if there is no block below us
					row[right] += splitWater
					break
				}
			}
			// Move water left.
			left := i
			for left-1 >= 0 {
				left--
				if rowAbove[left] == 1.0 {
					break // if there is a block in the way
				}
				if row[left] != 1.0 { // if there is no block below us
					row[left] += splitWater
					break
				}
			}
		}
		rowAbove = row
	}

	finalPercentages := make([]float64, len(rowAbove))
	for i, num := range rowAbove {
		finalPercentages[i] = num
		if num != 0 {
			finalPercentages[i] = num * -100
		}
	}
	return finalPercentages
}

// Test Case 1
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 1, 1, 0, 0, 1, 0],
//     [0, 0, 0, 0, 0, 0, 1],
//     [0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 3
// }
//
// Test Case 2
//
// {
//   "array": [
//     [0],
//     [0],
//     [0],
//     [0],
//     [0],
//     [0],
//     [0]
//   ],
//   "source": 0
// }
//
// Test Case 3
//
// {
//   "array": [
//     [0],
//     [0],
//     [0],
//     [0],
//     [0],
//     [1],
//     [0]
//   ],
//   "source": 0
// }
//
// Test Case 4
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 0, 1, 0, 1, 0, 0],
//     [0, 0, 1, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 1, 1, 0, 0, 1, 0],
//     [0, 0, 0, 0, 0, 0, 1],
//     [0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 3
// }
//
// Test Case 5
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 0, 1, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 1, 1, 0, 0, 1, 0],
//     [0, 0, 0, 0, 0, 0, 1],
//     [0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 3
// }
//
// Test Case 6
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 0, 0],
//     [0, 0, 1, 0, 0, 0, 1],
//     [0, 0, 1, 0, 1, 1, 0],
//     [0, 1, 0, 0, 0, 0, 0],
//     [0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 3
// }
//
// Test Case 7
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0],
//     [1, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 0, 0],
//     [0, 0, 1, 0, 0, 0, 1],
//     [0, 0, 1, 0, 1, 1, 0],
//     [0, 1, 0, 0, 0, 0, 0],
//     [0, 0, 0, 1, 0, 0, 0],
//     [1, 1, 1, 1, 1, 1, 1],
//     [0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 6
// }
//
// Test Case 8
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 8
// }
//
// Test Case 9
//
// {
//   "array": [
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],
//     [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
//   ],
//   "source": 8
// }
